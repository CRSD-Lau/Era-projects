--------------------------------------------------------------------------------------------------------------------- Setup functions for this job.  Generally should not be modified.--------------------------------------------------------------------------------------------------------------------- Initialization function for this job file.function get_sets()    mote_include_version = 2    -- Load and initialize the include file.    include('Mote-Include.lua')end-- Setup vars that are user-independent.  state.Buff vars initialized here will automatically be tracked.function job_setup()    state.Buff['Sentinel'] = buffactive['Sentinel'] or false    state.Buff['Cover'] = buffactive['Cover'] or false	state.Buff['Copy Image (3)'] = buffactive['Copy Image (3)'] or false	state.Buff['Copy Image (2)'] = buffactive['Image'] or false	state.Buff['Copy Image'] = buffactive['Image'] or falseend--------------------------------------------------------------------------------------------------------------------- User setup functions for this job.  Recommend that these be overridden in a sidecar file.--------------------------------------------------------------------------------------------------------------------- Setup vars that are user-dependent.  Can override this function in a sidecar file.function user_setup()    state.OffenseMode:options('STD', 'Acc', 'DD','Breath','PDT','MDT')    state.WeaponskillMode:options('Normal', 'Acc')    state.CastingMode:options('Normal', 'Resistant')    state.PhysicalDefenseMode:options('PDT')    state.MagicalDefenseMode:options('MDT')	state.IdleMode:options('Normal', 'HP', 'PDT', 'MDT')    	    update_defense_mode()        select_default_macro_book()end-- Define sets and vars used by this job file.function init_gear_sets()    --------------------------------------    -- Precast sets    --------------------------------------		sets.Enmity = 		{ammo="Iron Gobbet",head="Hydra Salade",        neck="Ritter Gorget",hands="Hydra Moufles",ear1="Hades Earring +1",ear2="Hades Earring +1",        body="Hydra Haubert",ring1="Corneus Ring",ring2="Hercules' Ring", waist="Trance Belt",        back="Valor Cape",legs="Hydra Brayettes",feet="Hydra Sollerets"}        -- Precast sets to enhance JAs	sets.precast.JA = set_combine(sets.Enmity,{})    sets.precast.JA['Invincible'] = sets.Enmity    sets.precast.JA['Holy Circle'] = set_combine(sets.precast.JA,{feet="Gallant Leggings"})    sets.precast.JA['Shield Bash'] = set_combine(sets.precast.JA,{ear2="Knight's Earring",hands="Valor Gauntlets +1"})    sets.precast.JA['Sentinel'] = set_combine(sets.precast.JA,{feet="Valor Leggings"})    sets.precast.JA['Rampart'] = set_combine(sets.precast.JA,{head="Valor Coronet"})    sets.precast.JA['Cover'] = set_combine(sets.precast.JA,{head="Gallant coronet",body="Valor surcoat"})	sets.precast.JA['Provoke'] = sets.Enmity    -- add mnd for Chivalry    sets.precast.JA['Chivalry'] = 		set_combine(sets.precast.JA,{ring2="Aqua Ring"})        -- Waltz set (chr and vit)    sets.precast.Waltz = 		set_combine(sets.precast.JA,{ammo="Bibiki Seashell",        head="Koenig Schaller",neck="Fortitude Torque",ear1="Ethereal Earring",ear2="Knight's Earring",        body="Koenig Cuirass",hands="Koenig Handschuhs",ring1="Corneus Ring",ring2="Light Ring",        back="Valor Cape",waist="Velocious Belt",legs="Koenig Diechlings",feet="Koenig Schuhs"})            -- Don't need any special gear for Healing Waltz.    sets.precast.Waltz['Healing Waltz'] = {}        sets.precast.Step = 		{neck="Peacock Amulet",body="Homam Corazza",head="Homam Zucchetto"}		    sets.precast.Flourish1 = 		sets.Enmity    -- Fast cast sets for spells        sets.precast.FC = 		set_combine(sets.precast.JA,{ear2="Loquacious Earring",legs="Homam Cosciales"})    sets.precast.FC['Enhancing Magic'] = 		set_combine(sets.precast.FC, {waist="Siegel Sash"})	           -- Weaponskill sets    -- Default set for any weaponskill that isn't any more specifically defined    sets.precast.WS = 		{head="Hydra Salade",neck="Fotia Gorget",ear1="Ethereal Earring",ear2="Pixie Earring",        body="Hecatomb Harness",hands="Hecatomb Mittens +1",ring1="Strigoi Ring",ring2="Thunder Ring",        back="Cerberus Mantle",waist="Potent Belt",legs="Valor Breeches +1",feet="Hecatomb Leggings"}    sets.precast.WS.Acc = 		set_combine(sets.precast.WS, {body="Homam Corazza"})    -- Specific weaponskill sets.  Uses the base set if an appropriate WSMod version isn't found.		-- Requiescat = MND    sets.precast.WS['Requiescat'] = 		set_combine(sets.precast.WS, {neck="Fotia Gorget"})		    sets.precast.WS['Requiescat'].Acc = 		set_combine(sets.precast.WS.Acc, {ring1="Leviathan Ring"})		-- Savage Blade STR MND	sets.precast.WS['Savage Blade'] = 		set_combine(sets.precast.WS, {neck="Fotia Gorget",ring1="Strigoi Ring", ring2="Flame Ring"})			-- Vorpal Blade STR	sets.precast.WS['Vorpal Blade'] = 		set_combine(sets.precast.WS, {neck="Fotia Gorget",ring1="Strigoi Ring", ring2="Flame Ring"})			-- Knights of Rouund STR MND    sets.precast.WS['Knights of Round'] = 		set_combine(sets.precast.WS, {neck="Fotia Gorget",ring1="Strigoi Ring", ring2="Flame Ring"})        --------------------------------------    -- Midcast sets    --------------------------------------    sets.midcast.FastRecast = 		{head="Walahra Turban",body="Koenig Cuirass",hands="Dusk Gloves +1",ear2="Loquacious Earring",        waist="Velocious Belt",legs="Homam Cosciales",feet="Dusk Ledelsens +1"}     sets.midcast.Flash = 		sets.Enmity			sets.precast['Ninjutsu'] = 		sets.precast.FC		sets.midcast['Ninjutsu'] = 		sets.midcast.FastRecast        sets.midcast.Cure = set_combine(sets.Enmity, {ear1="Hospitaler Earring"})    --------------------------------------    -- Idle/resting/defense/etc sets    --------------------------------------         sets.resting = {}        -- Idle sets    sets.idle = 		{ammo="Bibiki Seashell",neck="Parade Gorget",ear1="Merman's Earring",ear2="Merman's Earring",head="Valhalla Helm",        body="Valhalla Breastplate",hands="Koenig Handschuhs",ring1="Jelly Ring",ring2="Defending Ring",        back="Shadow Mantle",waist="Ocean Sash",legs="Blood Cuisses",feet="Koenig Schuhs"}    sets.idle.Town = 		{ammo="Bibiki Seashell",neck="Parade Gorget",ear1="Ethereal Earring",ear2="Knight's Earring",        body="Valhalla Breastplate",head="Valhalla Helm",hands="Koenig Handschuhs",ring1="Sattva Ring",ring2="Soil Ring",        back="Shadow Mantle",waist="Velocious Belt",legs="Blood Cuisses",feet="Koenig Schuhs"}        sets.idle.Weak = {}        sets.Kiting = 		{ammo="Bibiki Seashell",        head="Koenig Schaller",neck="Parade Gorget",ear1="Ethereal Earring",ear2="Knight's Earring",        body="Koenig Cuirass",hands="Koenig Handschuhs",ring1="Sattva Ring",ring2="Soil Ring",        back="Shadow Mantle",waist="Velocious Belt",legs="Blood Cuisses",feet="Koenig Schuhs"}    --------------------------------------    -- Defense sets    --------------------------------------               sets.defense.PDT = 		{ammo="Iron Gobbet",Main="Excalibur",sub="Aegis",        head="Valhalla Helm",neck="Fortified Chain",ear1="Ethereal Earring",ear2="Knight's Earring",        body="Valhalla Breastplate",hands="Koenig Handschuhs",ring1="Jelly Ring",ring2="Defending Ring",        back="Shadow Mantle",waist="Ocean Sash",legs="Koenig Diechlings",feet="Gallant Leggings +1"}    sets.defense.HP = 		{ammo="Iron Gobbet",Main="Excalibur",sub="Aegis",        head="Koenig Schaller",neck="Fortified Chain",ear1="Ethereal Earring",ear2="Knight's Earring",        body="Valhalla Breastplate",hands="Koenig Handschuhs",ring1="Jelly Ring",ring2="Soil Ring",        back="Gigant Mantle",waist="Creed Baudrier",legs="Aurum Cuisses",feet="Aurum Sabatons"}    sets.defense.MDT = 		{ammo="Bibiki Seashell",Main="Excalibur",sub="Aegis",        head="Valhalla Helm",neck="Fortified Chain",ear1="Merman's Earring",ear2="Merman's Earring",        body="Valhalla Breastplate",hands="Koenig Handschuhs",ring1="Shadow Ring",ring2="Defending Ring",        back="Shadow Mantle",waist="Resolute Belt",legs="Koenig Diechlings",feet="Gallant Leggings +1"}		    --------------------------------------    -- Engaged sets    --------------------------------------        sets.engaged.STD = 		{ammo="Bibiki Seashell",Main="Excalibur",sub="Aegis",        head="Valhalla Helm",neck="Fortified Chain",ear1="Ethereal Earring",ear2="Knight's Earring",        body="Valhalla Breastplate",hands="Koenig Handschuhs",ring1="Sattva Ring",ring2="Defending Ring",        back="Shadow Mantle",waist="Velocious Belt",legs="Koenig Diechlings",feet="Gallant Leggings +1"}			sets.engaged.STD.Image = 		{head="Walahra Turban",neck="Peacock Amulet",ear1="Ethereal Earring",ear2="Brutal Earring",        body="Homam Corazza",hands="Homam Manopolas",ring1="Toreador's Ring",ring2="Sniper's Ring +1",        back="Cerberus Mantle",waist="Velocious Belt",legs="Homam Cosciales",feet="Dusk Ledelsens +1"}    sets.engaged.Acc = 		{ammo="Ginsen",head="Homam Zucchetto",neck="Peacock Amulet",ear1="Bladeborn Earring",ear2="Knight's Earring",        body="Homam Corazza",hands="Homam Manopolas",ring1="Rajas Ring",ring2="K'ayres Ring",        back="Weard Mantle",waist="Zoran's Belt",legs="Homam Cosciales",feet="Aurum Sabatons"}			sets.engaged.DD = 		{head="Walahra Turban",neck="Fortitude Torque",ear1="Ethereal Earring",ear2="Brutal Earring",        body="Haubergeon +1",hands="Dusk Gloves +1",ring1="Rajas Ring",ring2="Strigoi Ring",        back="Cerberus Mantle",waist="Velocious Belt",legs="Homam Cosciales",feet="Dusk Ledelsens +1"}	    sets.engaged.DW = 		{ammo="Ginsen",head="Otomi Helm",neck="Fortitude Torque",ear1="Ethereal Earring",ear2="Brutal Earring",        body="Gorney Haubert +1",hands="Cizin Mufflers",ring1="Rajas Ring",ring2="Strigoi Ring",        back="Atheling Mantle",waist="Cetl Belt",legs="Cizin Breeches",feet="Whirlpool Greaves"}    sets.engaged.DW.Acc = 		{ammo="Ginsen",head="Yaoyotl Helm",neck="Asperity Necklace",ear1="Ethereal Earring",ear2="Brutal Earring",        body="Gorney Haubert +1",hands="Buremte Gloves",ring1="Rajas Ring",ring2="K'ayres Ring",        back="Weard Mantle",waist="Zoran's Belt",legs="Cizin Breeches",feet="Whirlpool Greaves"}    sets.engaged.PDT = 		{ammo="Bibiki Seashell",Main="Excalibur",sub="Aegis",        head="Valhalla Helm",neck="Fortified Chain",ear1="Ethereal Earring",ear2="Knight's Earring",        body="Valhalla Breastplate",hands="Koenig Handschuhs",ring1="Jelly Ring",ring2="Defending Ring",        back="Shadow Mantle",waist="Trance Belt",legs="Koenig Diechlings",feet="Gallant Leggings +1"}			sets.engaged.MDT = 		{ammo="Bibiki Seashell",Main="Excalibur",sub="Aegis",        head="Valhalla Helm",neck="Fortified Chain",ear1="Merman's Earring",ear2="Merman's Earring",        body="Valhalla Breastplate",hands="Koenig Handschuhs",ring1="Shadow Ring",ring2="Defending Ring",        back="Shadow Mantle",waist="Resolute Belt",legs="Koenig Diechlings",feet="Gallant Leggings +1"}    sets.engaged.Acc.PDT = 		set_combine(sets.engaged.Acc, {body="Crimson Scale Mail",neck="Twilight Torque",ring1="Defending Ring"})		sets.engaged.Breath = set_combine(sets.engaged.STD, {body="Crimson Scale Mail",ring2="Defending Ring"})			sets.engaged.Breath.Image =	{head="Walahra Turban",neck="Fortitude Torque",ear1="Ethereal Earring",ear2="Brutal Earring",        body="Crimson Scale Mail",hands="Dusk Gloves +1",ring1="Shadow Ring",ring2="Defending Ring",        back="Cerberus Mantle",waist="Velocious Belt",legs="Homam Cosciales",feet="Dusk Ledelsens +1"}    sets.engaged.DW.PDT = set_combine(sets.engaged.DW, {body="Reverence Surcoat +1",head="Valhalla Helm",neck="Twilight Torque",ring1="Defending Ring"})    	sets.engaged.DW.Acc.PDT = 		set_combine(sets.engaged.DW.Acc, {body="Reverence Surcoat +1",head="Valhalla Helm",neck="Twilight Torque",ring1="Defending Ring"})		sets.refresh = {body="Vermillion Cloak"}endfunction job_buff_change(name,gain)		if name == 'Copy Image (3)' or 'Copy Image (2)' or 'Copy Image' then		state.Buff[name] = gain		adjust_melee_groups()		handle_equipping_gear(player.status)	endendfunction adjust_melee_groups()	classes.CustomMeleeGroups:clear()		if state.Buff['Copy Image (3)'] or state.Buff['Copy Image (2)'] or state.Buff['Copy Image'] then		classes.CustomMeleeGroups:append('Image')	endend--------------------------------------------------------------------------------------------------------------------- Job-specific hooks for standard casting events.-------------------------------------------------------------------------------------------------------------------function job_midcast(spell, action, spellMap, eventArgs)    -- If DefenseMode is active, apply that gear over midcast    -- choices.  Precast is allowed through for fast cast on    -- spells, but we want to return to def gear before there's    -- time for anything to hit us.    -- Exclude Job Abilities from this restriction, as we probably want    -- the enhanced effect of whatever item of gear applies to them,    -- and only one item should be swapped out.    if state.DefenseMode.value ~= 'None' and spell.type ~= 'JobAbility' then        handle_equipping_gear(player.status)        eventArgs.handled = true    endend-- Called by the 'update' self-command, for common needs.-- Set eventArgs.handled to true if we don't want automatic equipping of gear.function job_update(cmdParams, eventArgs)    update_defense_mode()endfunction customize_idle_set(idleSet)	if state.IdleMode.value == 'Normal' then		if player.mpp < 90 then			idleSet = set_combine(idleSet, sets.refresh)		end	end    return idleSetend--------------------------------------------------------------------------------------------------------------------- Utility functions specific to this job.-------------------------------------------------------------------------------------------------------------------function update_defense_mode()    if player.sub_job == 'NIN' or player.sub_job == 'DNC' then        if player.equipment.sub and not player.equipment.sub:contains('Shield') and           player.equipment.sub ~= 'Aegis' and player.equipment.sub ~= 'Ochain' then            state.CombatForm:set('DW')        else            state.CombatForm:reset()        end    endend-- Select default macro book on initial load or subjob change.function select_default_macro_book()    -- Default macro set/book    if player.sub_job == 'DNC' then        set_macro_page(3, 7)    elseif player.sub_job == 'NIN' then        set_macro_page(1, 7)    elseif player.sub_job == 'WAR' then        set_macro_page(2, 7)	elseif player.sub_job == 'BLU' then		set_macro_page(4, 7)    else        set_macro_page(5, 7)    endend