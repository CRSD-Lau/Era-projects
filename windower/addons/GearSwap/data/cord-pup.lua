--------------------------------------------------------------------------------------------------------------------- Setup functions for this job.  Generally should not be modified.--------------------------------------------------------------------------------------------------------------------- Initialization function for this job file.function get_sets()    mote_include_version = 2    -- Load and initialize the include file.    include('Mote-Include.lua')end-- Setup vars that are user-independent.  state.Buff vars initialized here will automatically be tracked.function job_setup() 	state.Buff['Copy Image (3)'] = buffactive['Copy Image (3)'] or false	state.Buff['Copy Image (2)'] = buffactive['Image'] or false	state.Buff['Copy Image'] = buffactive['Image'] or falseend--------------------------------------------------------------------------------------------------------------------- User setup functions for this job.  Recommend that these be overridden in a sidecar file.--------------------------------------------------------------------------------------------------------------------- Setup vars that are user-dependent.  Can override this function in a sidecar file.function user_setup()    state.OffenseMode:options('STD', 'Acc', 'DD','Mage','PDT','MDT')    state.WeaponskillMode:options('Normal', 'Acc')    state.CastingMode:options('Normal', 'Resistant')    state.PhysicalDefenseMode:options('PDT')    state.MagicalDefenseMode:options('MDT')	state.IdleMode:options('Normal', 'Mage', 'HP', 'PDT', 'MDT')    	   -- update_defense_mode()        select_default_macro_book()end-- Define sets and vars used by this job file.function init_gear_sets()    --------------------------------------    -- Precast sets    --------------------------------------		sets.Enmity = 		{}		        -- Precast sets to enhance JAs	sets.precast.JA['Provoke'] = sets.Enmity	sets.precast.JA['Repair'] = {ear2='Guignol Earring', ammo='Automaton Oil +2'}	sets.precast.JA['Maintenance'] = {ear2='Guignol Earring', ammo='Automaton Oil +2'}    -- Waltz set (chr and vit)    sets.precast.Waltz = {}            -- Don't need any special gear for Healing Waltz.    sets.precast.Waltz['Healing Waltz'] = {}        sets.precast.Step = 		{main="Shlng. Baghnakhs",		range="Animator +1",		ammo="Automat. Oil +1",		head="Enkidu's Cap",		body="Enkidu's Harness",		hands="Enkidu's Mittens",		feet="Enkidu's Leggings",		neck="Peacock Amulet",		waist="Potent Belt",		left_ring="Sniper's Ring +1",		right_ring={ name="Toreador's Ring", augments={'"Triple Atk."+2','Water resistance+3'}}}		    sets.precast.Flourish1 = 		sets.Enmity    -- Fast cast sets for spells        sets.precast.FC = 		{ear2='Loquacious Earring', feet='Rostrum Pumps'}           -- Weaponskill sets    -- Default set for any weaponskill that isn't any more specifically defined    sets.precast.WS = 		{}    sets.precast.WS.Acc = 		{}    -- Specific weaponskill sets.  Uses the base set if an appropriate WSMod version isn't found.		-- Requiescat = MND    sets.precast.WS['Requiescat'] = 		set_combine(sets.precast.WS, {neck="Fotia Gorget"})		    sets.precast.WS['Requiescat'].Acc = 		set_combine(sets.precast.WS.Acc, {ring1="Leviathan Ring"})		-- Savage Blade STR MND	sets.precast.WS['Savage Blade'] = 		set_combine(sets.precast.WS, {neck="Fotia Gorget",ring1="Strigoi Ring", ring2="Flame Ring"})			-- Vorpal Blade STR	sets.precast.WS['Vorpal Blade'] = 		set_combine(sets.precast.WS, {neck="Fotia Gorget",ring1="Strigoi Ring", ring2="Flame Ring"})			-- Knights of Rouund STR MND    sets.precast.WS['Knights of Round'] = 		set_combine(sets.precast.WS, {neck="Fotia Gorget",ring1="Strigoi Ring", ring2="Flame Ring"})        --------------------------------------    -- Midcast sets    --------------------------------------    sets.midcast.FastRecast = 		{}     sets.midcast.Flash = 		sets.Enmity			sets.precast['Ninjutsu'] = 		sets.precast.FC		sets.midcast['Ninjutsu'] = 		sets.midcast.FastRecast        sets.midcast.Cure = 		{}    --------------------------------------    -- Idle/resting/defense/etc sets    --------------------------------------         sets.resting = {}        -- Idle sets    sets.idle = 		{main="Shlng. Baghnakhs",		range="Animator +1",		ammo="Automat. Oil +1",		head="Pantin Taj",		body="Enkidu's Harness",		hands="Garden Bangles",		legs="Enkidu's Subligar",		feet="Hermes' Sandals",		neck="Orochi Nodowa",		waist="Ocean Sash",		left_ear="Merman's Earring",		right_ear="Merman's Earring",		left_ring="Jelly Ring",		right_ring="Defending Ring",		back="Shadow Mantle",}    sets.idle.Town = 		{}			sets.idle.Mage =		{main={ name="Chatoyant Staff", augments={'Enfb.mag. skill +4','String instrument skill +6',}},		sub="Light Grip",		range="Animator +1",		ammo="Automat. Oil +1",		head="Mahatma Hat",		body="Mahatma Hpl.",		hands="Garden Bangles",		legs="Mahatma Slops",		feet="Rostrum Pumps",		neck="Orochi Nodowa",		waist="Potent Belt",		left_ear="Merman's Earring",		right_ear="Merman's Earring",		left_ring="Aqua Ring",		right_ring="Snow Ring",		back={ name="Prism Cape", augments={'Mag. Acc.+3',}}}		    sets.idle.Weak = {}        sets.Kiting = 		{feet='Hermes Sandals'}    --------------------------------------    -- Defense sets    --------------------------------------               sets.defense.PDT = 		{}    sets.defense.HP = 		{}    sets.defense.MDT = 		{}    --------------------------------------    -- Engaged sets    --------------------------------------        sets.engaged.STD = 		{main="Shlng. Baghnakhs",		range="Animator +1",		ammo="Automat. Oil +1",		head="Spurrer Beret",		body="Enkidu's Harness",		hands="Enkidu's Mittens",		legs="Enkidu's Subligar",		feet="Enkidu's Leggings",		neck="Peacock Amulet",		waist="Potent Belt",		left_ear="Ethereal Earring",		right_ear={ name="Brutal Earring", augments={'"Dual Wield"+3','"Dbl.Atk."+3',}},		left_ring="Sniper's Ring +1",		right_ring={ name="Toreador's Ring", augments={'"Triple Atk."+2','Water resistance+3',}},		back="Pantin Cape",}			sets.engaged.STD.Image = 		{main="Shlng. Baghnakhs",		range="Animator +1",		ammo="Automat. Oil +1",		head="Spurrer Beret",		body="Enkidu's Harness",		hands="Enkidu's Mittens",		legs="Enkidu's Subligar",		feet="Enkidu's Leggings",		neck="Peacock Amulet",		waist="Potent Belt",		left_ear="Ethereal Earring",		right_ear={ name="Brutal Earring", augments={'"Dual Wield"+3','"Dbl.Atk."+3',}},		left_ring="Sniper's Ring +1",		right_ring={ name="Toreador's Ring", augments={'"Triple Atk."+2','Water resistance+3',}},		back="Pantin Cape",}			sets.engaged.Mage = 		{main={ name="Chatoyant Staff", augments={'Enfb.mag. skill +4','String instrument skill +6',}},		sub="Light Grip",		range="Animator +1",		ammo="Automat. Oil +1",		head="Mahatma Hat",		body="Mahatma Hpl.",		hands="Garden Bangles",		legs="Mahatma Slops",		feet="Rostrum Pumps",		neck="Orochi Nodowa",		waist="Potent Belt",		left_ear="Merman's Earring",		right_ear="Merman's Earring",		left_ring="Aqua Ring",		right_ring="Snow Ring",		back={ name="Prism Cape", augments={'Mag. Acc.+3',}},}    sets.engaged.Acc = 		{main="Shlng. Baghnakhs",		range="Animator +1",		ammo="Automat. Oil +1",		head="Enkidu's Cap",		body="Enkidu's Harness",		hands="Enkidu's Mittens",		legs="Enkidu's Subligar",		feet="Enkidu's Leggings",		neck="Peacock Amulet",		waist="Potent Belt",		left_ear="Ethereal Earring",		right_ear={ name="Brutal Earring", augments={'"Dual Wield"+3','"Dbl.Atk."+3',}},		left_ring="Sniper's Ring +1",		right_ring={ name="Toreador's Ring", augments={'"Triple Atk."+2','Water resistance+3',}},		back="Pantin Cape",}			sets.engaged.DD = 		{}    sets.engaged.PDT = 		{main="Shlng. Baghnakhs",		range="Animator +1",		ammo="Automat. Oil +1",		head="Spurrer Beret",		body="Enkidu's Harness",		hands="Enkidu's Mittens",		legs="Enkidu's Subligar",		feet="Marine M Boots",		neck="Evasion Torque",		waist="Potent Belt",		left_ear="Ethereal Earring",		right_ear={ name="Brutal Earring", augments={'"Dual Wield"+3','"Dbl.Atk."+3',}},		left_ring="Jelly Ring",		right_ring="Defending Ring",		back="Shadow Mantle",}			sets.engaged.MDT = 		{}	sets.refresh = {body="Vermillion Cloak"}endfunction job_buff_change(name,gain)		if name == 'Copy Image (3)' or 'Copy Image (2)' or 'Copy Image' then		state.Buff[name] = gain		adjust_melee_groups()		handle_equipping_gear(player.status)	endendfunction adjust_melee_groups()	classes.CustomMeleeGroups:clear()		if state.Buff['Copy Image (3)'] or state.Buff['Copy Image (2)'] or state.Buff['Copy Image'] then		classes.CustomMeleeGroups:append('Image')	endend--------------------------------------------------------------------------------------------------------------------- Job-specific hooks for standard casting events.-------------------------------------------------------------------------------------------------------------------function job_midcast(spell, action, spellMap, eventArgs)    -- If DefenseMode is active, apply that gear over midcast    -- choices.  Precast is allowed through for fast cast on    -- spells, but we want to return to def gear before there's    -- time for anything to hit us.    -- Exclude Job Abilities from this restriction, as we probably want    -- the enhanced effect of whatever item of gear applies to them,    -- and only one item should be swapped out.    if state.DefenseMode.value ~= 'None' and spell.type ~= 'JobAbility' then        handle_equipping_gear(player.status)        eventArgs.handled = true    endend-- Called by the 'update' self-command, for common needs.-- Set eventArgs.handled to true if we don't want automatic equipping of gear.function job_update(cmdParams, eventArgs)    update_defense_mode()endfunction customize_idle_set(idleSet)	if state.IdleMode.value == 'Normal' then		if player.mpp < 90 then			idleSet = set_combine(idleSet, sets.refresh)		end	end    return idleSetend--if pet.hpp < 25 then--	send_command('@input /ja repair <me>')--end-- Select default macro book on initial load or subjob change.function select_default_macro_book()    -- Default macro set/book    if player.sub_job == 'DNC' then        set_macro_page(3, 18)    elseif player.sub_job == 'NIN' then        set_macro_page(1, 18)    elseif player.sub_job == 'WAR' then        set_macro_page(2, 18)	elseif player.sub_job == 'BLU' then		set_macro_page(4, 18)    else        set_macro_page(5, 18)    endend